        LOAD =0                 # int result = 0;       -> R0 = 0;
        STORE 2                 #                       -> R2 = R0;
        READ 1                  # cin >> n;             -> Read n from input band and store in R1;
        LOAD 1                  # if (n <= 0) return 0;  -> R0 = R1;
        MULT =-1                #                       -> R0 = R0 * -1;
        JGTZ fin                #                       -> R0 > 0 ? jump fin;
        JZERO fin               #                       -> R0 == 0 ? jump fin;
        LOAD =1                 # result = 1;           -> R0 = 1;
        STORE 2                 #                       -> R2 = R0;
        LOAD =0                 # times = 0;            -> R0 = 0;
        STORE 3                 #                       -> R3 = R0;
while:  LOAD 3                  # while (times < n) {   -> R0 = R3;
        SUB 1                   #                       -> R0 = R0 - R1;
        ADD =1                  #                       -> R0 = R0 + 1;
        JGTZ fin                #                       -> R0 > 0 ? jump fin
        LOAD 2                  # result = result * n;  -> R0 = R2;
        MULT 1                  #                       -> R0 = R0 * R1;
        STORE 2                 #                       -> R2 = R0;                                                        
        LOAD 3                  # times = times + 1;    -> R0 = R3;
        ADD =1                  #                       -> R0 = R0 + 1;
        STORE 3                 #                       -> R3 = R0;
        JUMP while              # }                     -> Jump to 'while'.
fin:    LOAD 2                  # cout << result;       -> R0 = R2;
        WRITE 2                 #                       -> Write R0 to output band.
        HALT                    #                       -> End of program.